{"version":3,"sources":["BetterTitle.js"],"names":["node","document","getElementById","html","content","args","map","line","shift","join","DatoCmsPlugin","init","plugin","startAutoResizer","fieldPath","parameters","instance","fields","visible","toggleField","fieldsList","split","field","trim","render","fieldValue","getFieldValue","setFieldValue","innerHTML","forEach","addFieldChangeListener"],"mappings":";AAMA,SAAA,IAAA,IAAA,EAAA,EAAA,CAAA,oDAAA,gCAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,MAAA,IAAA,OAAA,OAAA,OAAA,iBAAA,EAAA,CAAA,IAAA,CAAA,MAAA,OAAA,OAAA,OALA,IAAMA,EAAOC,SAASC,eAAe,QAG/BC,EAAO,SAACC,GAAYC,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAb,IAAA,MAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAaA,EAAb,EAAA,GAAA,UAAA,GAAsBD,OAAAA,EAAQE,IAAI,SAAAC,GAAWA,MAAAA,GAAAA,OAAAA,GAAOF,OAAAA,EAAKG,SAAW,MAAMC,KAAK,KAE5FC,cAAcC,KAAK,SAACC,GAClBA,EAAOC,mBAECC,IAAAA,EAA0BF,EAA1BE,UACoBC,EADMH,EAAfG,WACoBC,SAA/BC,EAAAA,EAAAA,OAAQC,EAAAA,EAAAA,QAEhBN,EAAOO,YAAYL,EAAWI,GAExBE,IAAAA,EAAaH,EAChBI,MAAM,KACNf,IAAI,SAAAgB,GAASA,OAAAA,EAAMC,SAEhBC,EAAS,WACPC,IAAAA,EAAaL,EAChBd,IAAI,SAAAgB,GAASV,OAAAA,EAAOc,cAAcJ,KAClCb,KAAK,KAERG,EAAOe,cAAcb,EAAWW,GAE1BrB,IAAAA,EAAUD,EAEJsB,IAAAA,GAIZzB,EAAK4B,UAAYxB,GAGnBoB,IAEAJ,EAAWS,QAAQ,SAAAP,GAASV,OAAAA,EAAOkB,uBAAuBR,EAAOE","file":"BetterTitle.37d5b2b8.map","sourceRoot":"../src","sourcesContent":["\nconst node = document.getElementById('root')\n\n// purely for html syntax highlighting (not needed) :)\nconst html = (content, ...args) => content.map(line => `${line}${args.shift() || ''}`).join('')\n\nDatoCmsPlugin.init((plugin) => {\n  plugin.startAutoResizer()\n\n  const { fieldPath, parameters } = plugin\n  const { fields, visible } = parameters.instance\n\n  plugin.toggleField(fieldPath, visible)\n\n  const fieldsList = fields\n    .split(',')\n    .map(field => field.trim())\n\n  const render = () => {\n    const fieldValue = fieldsList\n      .map(field => plugin.getFieldValue(field))\n      .join(' ')\n\n    plugin.setFieldValue(fieldPath, fieldValue)\n\n    const content = html`\n      <div class=\"BetterTitle\">\n        <span>${fieldValue}</span>\n      </div>\n    `\n\n    node.innerHTML = content\n  }\n\n  render()\n\n  fieldsList.forEach(field => plugin.addFieldChangeListener(field, render))\n})\n"]}